{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/incidents/incidents.component.css","webpack:///./src/app/components/incidents/incidents.component.html","webpack:///./src/app/components/incidents/incidents.component.ts","webpack:///./src/app/components/shared/navbar/navbar.component.html","webpack:///./src/app/components/shared/navbar/navbar.component.ts","webpack:///./src/app/services/gendis.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n  <div class=\\\"container m-5\\\">\\n    <router-outlet></router-outlet>\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MarioGendis';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ROUTES } from './app.routes';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\n\nimport { GendisService } from './services/gendis.service';\nimport { IncidentsComponent } from './components/incidents/incidents.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    IncidentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule.forRoot( ROUTES, { useHash: true } )\n  ],\n  providers: [\n    GendisService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { IncidentsComponent } from './components/incidents/incidents.component';\n\n\nexport const ROUTES: Routes = [\n     { path: 'home', component: HomeComponent },\n     { path: 'incidents', component: IncidentsComponent },\n     { path: '**', pathMatch: 'full', redirectTo: 'home' }\n ];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n<table class=\\\"table\\\">\\n     <thead class=\\\"thead-light\\\">\\n       <tr>\\n         <th scope=\\\"col\\\">Server Name</th>\\n         <th scope=\\\"col\\\">Website Server</th>\\n         <th scope=\\\"col\\\">Last Update</th>\\n       </tr>\\n     </thead>\\n     <tbody>\\n       <tr>\\n         <th scope=\\\"row\\\">{{ page.name }}</th>\\n         <td><a [href]=\\\"page.url\\\" target=\\\"_blank\\\">Visit Website</a></td>\\n         <td>{{ page.updated_at | date }}</td>\\n       </tr>\\n     </tbody>\\n   </table>\\n   \\n   <div>\\n   <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n     <p>Status: {{ status.description }}</p>\\n   </div>\\n   </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GendisService } from '../../services/gendis.service';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  page:{} = {};\n  status:{} = {};\n\n  constructor( private _gs: GendisService ) { \n\n    this._gs.getOverall()\n        .subscribe( (data:any) => {\n          console.log(data);\n          this.page = data.page;\n          this.status = data.status;\n        });\n  }\n  \n\n  ngOnInit() {\n    \n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5jaWRlbnRzL2luY2lkZW50cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Service Name</th>\\n      <th scope=\\\"col\\\">Status</th>\\n      <th scope=\\\"col\\\">Date Created</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let components of newComponents; let i = index\\\">\\n      <th scope=\\\"row\\\">{{ components.name }}</th>\\n      <td><span class=\\\"badge badge-primary badge-pill\\\">{{ components.status }}</span></td>\\n      <td>{{ components.created_at | date }}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GendisService } from './../../services/gendis.service';\n\n\n@Component({\n  selector: 'app-incidents',\n  templateUrl: './incidents.component.html',\n  styleUrls: ['./incidents.component.css']\n})\nexport class IncidentsComponent {\n\n  newComponents:any[] = [];\n\n  constructor( private _gs: GendisService ) { \n\n    this._gs.getIncidents()\n        .subscribe( (data:any) => {\n          console.log(data);\n          this.newComponents = data.components;\n        });\n  }\n   ngOnInit() {\n  }\n  }\n\n","module.exports = \"\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand text-light\\\">Gendis App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['home']\\\" routerLinkActive=\\\"active\\\">Info</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['incidents']\\\" routerLinkActive=\\\"active\\\">Incidents</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: []\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GendisService {\n\n  constructor( private http:HttpClient ) { \n    console.log('El servicio esta preparado');\n    \n  }\n\n  getOverall() {\n\n    const apiUrl = 'https://bqlf8qjztdtr.statuspage.io/api/v2';\n\n    return this.http.get(`${apiUrl}/status.json`);\n      \n  }\n\n  getIncidents() {\n    const apiUrl = 'https://bqlf8qjztdtr.statuspage.io/api/v2';\n    \n    return this.http.get(`${apiUrl}/components.json`)\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}